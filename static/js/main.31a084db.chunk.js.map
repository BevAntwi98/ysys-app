{"version":3,"sources":["components/Header/HeaderComponent.jsx","components/Sidebar/SidebarComponent.jsx","components/Cards/CharacterCard.jsx","components/Cards/HouseCard.jsx","components/Cards/BookCard.jsx","components/Feed/FeedComponent.jsx","App.js","api/api.js","index.js"],"names":["HeaderComponent","sidebarExpanded","setSidebarExpanded","searchParameter","setSearchParameter","fetchFilteredData","className","Button","variant","onClick","Heading","textSize","TextInput","placeholder","value","onChange","e","target","onKeyPress","key","TextInputIcon","align","name","TextInputButton","SidebarComponent","expanded","filterList","selectedFilter","setSelectedFilter","numberOfResultsList","numberOfResults","setNumberOfResults","RadioButtonGroup","map","filter","RadioButton","checked","Dropdown","DropdownTarget","isTarget","DropdownSource","DropdownContext","DropdownMenu","item","DropdownMenuItem","selected","Icon","culturesMap","CharacterCard","character","Card","borderRadius","shade","shadow","size","culture","CardImage","height","src","CardCaption","textStrong","List","style","ListItem","CardContent","aliases","Separator","titles","join","Badge","color","died","HouseCard","house","BookCard","book","FeedComponent","displayField","fetching","fetched","feedResults","length","ProgressInfinite","result","index","App","useState","setFeedResults","setFetched","setDisplayField","setFetching","field","numResults","searchParam","search","fetch","then","res","json","getData","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31a084db.chunk.js","sourcesContent":["import React from 'react';\nimport './HeaderComponent.css';\nimport { Button, Heading, TextInput, TextInputButton, TextInputIcon } from '@brandwatch/axiom-components';\n\nexport const HeaderComponent = ({\n                                    sidebarExpanded,\n                                    setSidebarExpanded,\n                                    searchParameter,\n                                    setSearchParameter,\n                                    fetchFilteredData\n                                }) => {\n    return <header className={'app-header'}>\n\n        {/*/!* TODO - add a button to handle the expanded state change */}\n        <Button className={'expand-button'}\n                variant={sidebarExpanded ? 'primary' : 'secondary'}\n                onClick={() => setSidebarExpanded(!sidebarExpanded)}>\n            {sidebarExpanded ? 'Hide filters' : 'Show filters'}\n        </Button>\n        <Heading textSize={'headline'}>\n            An App of Ice and Fire\n        </Heading>\n\n        {/* TODO - add a search bar which searches by name and can trigger a new fetch */}\n        <TextInput className={\"header-search\"}\n                   placeholder={'Search by name...'}\n                   value={searchParameter}\n                   onChange={(e) => setSearchParameter(e.target.value)}\n                   onKeyPress={(e) => {\n                       if (e.key === 'Enter') {\n                           fetchFilteredData()\n                       }\n                   }}>\n            <TextInputIcon align=\"left\" name=\"magnify-glass\" />\n            <TextInputButton\n                align=\"right\"\n                onClick={() => fetchFilteredData()}\n            >\n                Search\n            </TextInputButton>\n        </TextInput>\n\n    </header>\n};","import React from 'react'\nimport './SidebarComponent.css';\nimport {\n    Button,\n    Dropdown,\n    DropdownContext,\n    DropdownMenu,\n    DropdownMenuItem,\n    DropdownSource,\n    DropdownTarget,\n    Heading,\n    Icon,\n    RadioButton,\n    RadioButtonGroup,\n    TextInput,\n    TextInputIcon\n} from '@brandwatch/axiom-components';\n\n// TODO - make sure SidebarComponent is expecting the right props!\nexport const SidebarComponent = ({\n                                     expanded,\n                                     filterList,\n                                     selectedFilter,\n                                     setSelectedFilter,\n                                     numberOfResultsList,\n                                     numberOfResults,\n                                     setNumberOfResults,\n                                     fetchFilteredData\n                                 }) => {\n\n    // TODO - reflect expanded state in sidebar's className\n\n    // TODO - make sure the classNames in the SidebarComponent.css\n    //  match up with the classes you choose!\n    return <div className={`app-sidebar ${expanded ? 'expanded' : 'collapsed'}`}>\n        {expanded &&\n        <>\n            <Heading>\n                Fetch:\n            </Heading>\n\n            {/* TODO - add a list of radio buttons which determine which endpoint\n                       you will be requesting from (books/characters/houses)\n            */}\n            <RadioButtonGroup>\n                {\n                    filterList.map(filter => {\n                        return <RadioButton key={filter}\n                                            name={'filter'}\n                                            checked={filter === selectedFilter}\n                                            onChange={() => setSelectedFilter(filter)}>\n                            {filter}\n                        </RadioButton>\n                    })\n                }\n            </RadioButtonGroup>\n\n            {/* TODO - add a dropdown responsible for setting numResults state */}\n            <Heading>How many?</Heading>\n            <Dropdown>\n                <DropdownTarget>\n                    <TextInput\n                        isTarget\n                        value={numberOfResults}\n                    >\n                        <TextInputIcon name=\"chevron-down\" />\n                    </TextInput>\n                </DropdownTarget>\n                <DropdownSource>\n                    <DropdownContext>\n                        <DropdownMenu>\n                            {numberOfResultsList.map((item) => (\n                                <DropdownMenuItem\n                                    onClick={() => setNumberOfResults(item)}\n                                    selected={numberOfResults === item}\n                                >\n                                    {item}\n                                </DropdownMenuItem>\n                            ))}\n                        </DropdownMenu>\n                    </DropdownContext>\n                </DropdownSource>\n            </Dropdown>\n        </>\n        }\n\n        {/* TODO - add a button which calls the fetch function with correct parameters*/}\n        <Button onClick={() => fetchFilteredData()}>\n            {expanded ? 'Search' : <Icon name={'refresh'} />}\n        </Button>\n    </div>\n};","import React from 'react';\nimport {\n    Badge,\n    Card,\n    CardCaption,\n    CardContent,\n    CardImage,\n    Heading,\n    List,\n    ListItem,\n    Separator\n} from '@brandwatch/axiom-components';\nimport './Card.css';\n\n\n// TODO - stretch? build map of culture to image\nconst culturesMap = {\n    'Braavosi': 'https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/07064f06-a11c-4d2b-af70-31d4abb11a48/ddco89x-3bdc0d71-bc11-4753-8709-0eb1ea24b6ca.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3sicGF0aCI6IlwvZlwvMDcwNjRmMDYtYTExYy00ZDJiLWFmNzAtMzFkNGFiYjExYTQ4XC9kZGNvODl4LTNiZGMwZDcxLWJjMTEtNDc1My04NzA5LTBlYjFlYTI0YjZjYS5qcGcifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6ZmlsZS5kb3dubG9hZCJdfQ.qiL4mJe3lzSMpimWJBHyCgiAyxBiXwc0thJ0Fwgp-Wo',\n    'Westeros': 'https://awoiaf.westeros.org/images/thumb/7/7b/World_map_Westeros.png/1200px-World_map_Westeros.png',\n    'Valyrian': 'https://awoiaf.westeros.org/images/0/02/Fourteen_Flames.jpg',\n    'Northmen': 'https://awoiaf.westeros.org/images/thumb/2/22/Alyn_Spiller_Northland_Keep.JPG/350px-Alyn_Spiller_Northland_Keep.JPG',\n    'First Men': 'https://awoiaf.westeros.org/images/thumb/a/a9/Bill_Corbett_men_of_duty.jpg/350px-Bill_Corbett_men_of_duty.jpg'\n};\n// TODO - use the axiom Card component to generate a card displaying attributes\n//  from the Character endpoint response\nexport const CharacterCard = ({ character }) => {\n    return <Card className={'card'}\n                 borderRadius=\"small\"\n                 shade=\"shade-1\"\n                 shadow\n                 size=\"medium\"\n    >\n        {\n            character.culture && <CardImage className={'card-image'}\n                                            height={'150px'}\n                                            src={culturesMap[character.culture]}>\n                <CardCaption textStrong>\n                    <List style=\"inline\">\n                        <ListItem>\n                            {character.culture}\n                        </ListItem>\n                    </List>\n                </CardCaption>\n            </CardImage>\n        }\n        <CardContent size=\"large\">\n            <Heading textSize={'headtitle'}>\n                <strong>{character.name || character.aliases[0]}</strong>\n            </Heading>\n            <Separator />\n            {\n                character.titles[0] !== '' && <Heading textSize={'large'}>\n                    <strong>Titles</strong>: {character.titles.join(', ')}\n                </Heading>\n            }\n            {\n                character.aliases[0] !== '' && <Heading textSize={'small'}>\n                    <strong>AKA</strong>: <em>{character.aliases.join(', ')}</em>\n                </Heading>\n            }\n            <Badge size={'small'} color={character.died ? 'tiny-clanger': 'terra-form'}>\n                {character.died || 'Alive'}\n            </Badge>\n        </CardContent>\n    </Card>\n}","import React from 'react';\nimport { Card, CardContent, Heading } from '@brandwatch/axiom-components';\nimport './Card.css';\n\n// TODO - use the axiom Card component to generate a card displaying attributes\n//  from the House endpoint response\nexport const HouseCard = ({ house }) => {\n    return <Card className={'card'}\n        borderRadius=\"small\"\n        onClick={function noRefCheck(){}}\n        shade=\"shade-1\"\n        shadow\n        size=\"medium\"\n    >\n        <CardContent size=\"large\">\n            <Heading textSize={'headtitle'}>\n                <strong>{house.name}</strong>\n            </Heading>\n        </CardContent>\n    </Card>\n}","import React from 'react';\nimport { Card, CardContent, Heading } from '@brandwatch/axiom-components';\nimport './Card.css';\n\n// TODO - use the axiom Card component to generate a card displaying attributes\n//  from the Book endpoint response\nexport const BookCard = ({ book }) => {\n    return <Card className={'card'}\n        borderRadius=\"small\"\n        shade=\"shade-1\"\n        shadow\n        size=\"medium\"\n    >\n        <CardContent size=\"large\">\n            <Heading textSize={'headtitle'}>\n                <strong>{book.name}</strong>\n            </Heading>\n        </CardContent>\n    </Card>\n}","import React from 'react'\nimport './FeedComponent.css';\nimport { Heading, ProgressInfinite } from '@brandwatch/axiom-components';\nimport { CharacterCard } from '../Cards/CharacterCard';\nimport { HouseCard } from '../Cards/HouseCard';\nimport { BookCard } from '../Cards/BookCard';\n\nexport const FeedComponent = ({ displayField, fetching, fetched, feedResults, selectedFilter }) => {\n    return <div className={'app-feed'}>\n        <div className={'app-feed-background-image'} />\n        <div className={'app-feed-background-overlay'} />\n        {/* TODO - add a placeholder for an empty feed */}\n        {\n            feedResults.length === 0 && <div className={'app-feed-prompt'}>\n                {fetching && <ProgressInfinite size={'medium'} />}\n                {!fetching && fetched && feedResults.length === 0 &&\n                <Heading textSize={'headline'}>\n                    No results. Please adjust your filters and try again.\n                </Heading>\n                }\n                {!fetching && !fetched && feedResults.length === 0 &&\n                <Heading textSize={'headline'}>\n                    Adjust your filters and fetch your data!\n                </Heading>\n                }\n            </div>\n        }\n\n        {/* TODO - build up a grid of cards based on the feed results */}\n        <div className={'app-feed-grid'}>\n            {\n                feedResults.map((result, index) => {\n                    return <div key={result.name + '-' + index}>\n                        {displayField === 'Characters' && <CharacterCard character={result} />}\n                        {displayField === 'Houses' && <HouseCard house={result} />}\n                        {displayField === 'Books' && <BookCard book={result} />}\n                    </div>\n                })\n            }\n        </div>\n    </div>\n};","import './App.css';\nimport React, { useState } from 'react';\nimport { HeaderComponent } from './components/Header/HeaderComponent';\nimport { SidebarComponent } from './components/Sidebar/SidebarComponent';\nimport { FeedComponent } from './components/Feed/FeedComponent';\nimport { getData } from './api/api';\n\nconst filterList = ['Characters', 'Houses', 'Books'];\nconst numberOfResultsList = [10, 25, 50];\n\nfunction App() {\n\n    // TODO - add in a expanded state/setState\n    const [sidebarExpanded, setSidebarExpanded] = useState(true);\n\n    // TODO - add in a search state/setState\n    const [searchParameter, setSearchParameter] = useState('');\n\n    // TODO - add in selectedFilter state/setState\n    const [selectedFilter, setSelectedFilter] = useState(filterList[0]);\n\n    // TODO - add in numberOfResults state/setState\n    const [numberOfResults, setNumberOfResults] = useState(numberOfResultsList[0]);\n\n    // TODO - add in a feedResults state/setState\n    const [feedResults, setFeedResults] = useState([]);\n\n    // TODO - import getData() from api (you may need to write this function)\n    //         and call it here (setting the results to the feedResults)\n    const [fetched, setFetched] = useState(false);\n\n    const [displayField, setDisplayField] = useState('');\n    // TODO - implement loading state and pass to FeedComponent\n    const [fetching, setFetching] = useState(false);\n\n    const fetchFilteredData = () => {\n        setFetching(true);\n        setFeedResults([]);\n        getData(selectedFilter, numberOfResults, searchParameter)\n            .then(res => setFeedResults(res))\n            .finally(() => setFetching(false));\n        setDisplayField(selectedFilter);\n        setFetched(true);\n    };\n\n    // TODO - pass in sidebar and search state to header component, & fetch function\n    // TODO - pass in expanded, filters, number of results state/setState to sidebar & fetch function\n    return (\n        <div className=\"app\">\n            <HeaderComponent sidebarExpanded={sidebarExpanded}\n                             setSidebarExpanded={setSidebarExpanded}\n                             searchParameter={searchParameter}\n                             setSearchParameter={setSearchParameter}\n                             fetchFilteredData={fetchFilteredData}/>\n            <div className=\"app-content\">\n                <SidebarComponent expanded={sidebarExpanded}\n                                  filterList={filterList}\n                                  selectedFilter={selectedFilter}\n                                  setSelectedFilter={setSelectedFilter}\n                                  numberOfResultsList={numberOfResultsList}\n                                  numberOfResults={numberOfResults}\n                                  setNumberOfResults={setNumberOfResults}\n                                  fetchFilteredData={fetchFilteredData}/>\n                <FeedComponent displayField={displayField}\n                               fetching={fetching}\n                               fetched={fetched}\n                               feedResults={feedResults}\n                               selectedFilter={selectedFilter}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// TODO create a method that takes a single argument that fetches 1 of:\n//  - books\n//  - characters\n//  - houses\n\nexport const getData = (field, numResults, searchParam) => {\n    const search = searchParam ? `&name=${searchParam}` : '';\n    return fetch(`https://anapioficeandfire.com/api/${field}?pageSize=${numResults}${search}`)\n        .then(res => res.json())\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}